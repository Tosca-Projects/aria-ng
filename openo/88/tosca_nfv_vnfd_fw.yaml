tosca_definitions_version: tosca_simple_yaml_1_0
description: VNFD TOSCA file demo

metadata:
  id: zte_firewall_1_0
  vendor: zte
  version: 5.16.11
  vnf_type: firewall

imports:
  #- tosca-simple-profile-1.0/tosca-simple-profile-1.0.yaml
  - TOSCA_definition_nfv_1_0.yaml
  - TOSCA_definition_nfv_ext_1_0.yaml
  - TOSCA_definition_nfv_ext_zte_1_0.yaml
  
topology_template:
  description: the topology template of firewall vnf.

  substitution_mappings:
    node_type: tosca.nodes.nfv.ext.VNF.FireWall
    requirements:
      virtualLink_control_cp: [fw_control_cp, virtualLink]
      virtualLink_data_cp: [fw_data_cp, virtualLink]
    capabilities:
      forwarder_data_cp: [ fw_data_cp, forwarder ]

  inputs:
    controlNetworkName:
      type: string
      description: Name of control network
    dataNetworkName:
      type: string
      description: Name of data network

  node_templates:
    fw_image:
      type: tosca.nodes.nfv.ext.ImageFile
      properties:
        name: fw_1_0_qcow2.img
        version: 1.0
        disk_format: qcow2
        file_url: SoftwareImages/fw_1_0_qcow2.img

    root_local_storage:
      type: tosca.nodes.nfv.ext.LocalStorage
      properties:
        size: 40 GB
        disk_type: root

    fw_vdu:
      type: tosca.nodes.nfv.ext.VDU
      requirements:
        - guest_os: fw_image
        - local_storage: root_local_storage
      capabilities:
        nfv_compute:
          properties: 
            num_cpus: 4
            mem_size: 8192 MB

    fw_control_cp:
      type: tosca.nodes.nfv.ext.CP
      properties:
        order: 0
      requirements:
        - virtualLink: control_network
        - virtualbinding: fw_vdu
        
    fw_data_cp:
      type: tosca.nodes.nfv.ext.CP
      properties:
        order: 1
        sfc_encapsulation: vxlan-gpe
        direction: bidirectional
      requirements:
        - virtualLink: data_network
        - virtualbinding: fw_vdu

    control_network:
      type: tosca.nodes.nfv.VL
      properties:
        network_name: { get_input: controlNetworkName }

    data_network:
      type: tosca.nodes.nfv.VL
      properties:
        network_name: { get_input: dataNetworkName }

