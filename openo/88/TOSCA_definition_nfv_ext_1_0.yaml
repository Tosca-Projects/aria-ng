tosca_definitions_version: tosca_simple_yaml_1_0

description: Definitions file for all extend type of zte for tosca-nfv.
  
data_types:
  tosca.datatypes.nfv.ext.FPPolicyCriteria:
    derived_from: tosca.datatypes.Root
    properties:
      dest_port_range:
        type: range
        required: false
        constraints:
          - in_range: [ 1, 65535 ]
      source_port_range:
        type: range
        required: false
        constraints:
          - in_range: [ 1, 65535 ]
      ip_protocol:
        type: string
        required: false
        default: tcp
        constraints:
          - valid_values: [ udp, tcp ]
      dest_ip_range:
        type: list
        required: false
        description: The format is startip1-endip1,startip2-endip2
        entry_schema:
          type: string
      source_ip_range:
        type: list
        required: false
        description: The format is startip1-endip1,startip2-endip2
        entry_schema:
          type: string
      dscp:
        type: integer
        required: false

  tosca.datatypes.nfv.ext.FPPolicy:
    derived_from: tosca.datatypes.Root
    properties:
      type:
        type: string
        required: false
        default: ACL
        constraints:
          - valid_values: [ ACL ]
      criteria:
        type: tosca.datatypes.nfv.ext.FPPolicyCriteria
        required: true
        
  tosca.datatypes.nfv.ext.RouterExternalIP:
    derived_from: tosca.datatypes.Root
    description:  IP address of the external gateway interface of the router
    properties:
      ip_address:
        type: string
        required: true
      subnet_name:
        type: string
        required: true

node_types:
  tosca.nodes.nfv.ext.VNF:
    derived_from: tosca.nodes.nfv.VNF
    properties:
      vnf_type:
        type: string
        required: false
        description: Type of this VNF. For example MME,USPP,xGW etc.
      request_reclassification:
        type: boolean
        required: false
        default: false
        description: Determines whether VNF can request reclassification by the VNF forwarder
      nsh_aware:
        type: boolean
        required: false
        default: true
        description: Whether this VNF can process NSH headers
      vnfm_type:
        type: string
        required: true
        description: Type of this VNFM, Such as ZTE,HW,JUJU,...
    requirements:
      - virtual_link:
          capability: tosca.capabilities.nfv.VirtualLinkable
          relationship: tosca.relationships.nfv.VirtualLinksTo
          occurrences: [0, UNBOUNDED]

  tosca.nodes.nfv.ext.ImageFile:
    derived_from: tosca.nodes.Root
    properties:
      name:
        type: string
        required: true
        description: The name of this ImageFile.
        constraints:
          - min_length: 1
      version:
        type: version
        required: false
        description: The version of this ImageFile.
      checksum:
        type: string
        required: false
        description: The checksum of this ImageFile,used for integrity checking.
      disk_format:
        type: string
        required: true
        description: The disk format type of this ImageFile.
        constraints:
          - valid_values: [ qcow2,raw,vmdk,vhd,vhi,iso,aki,ami,ari,ova ]
      file_url:
        type: string
        required: true
        description: The location of this ImageFile.Can be relative location or repository location.
        constraints:
          - min_length: 1
    capabilities:
      guest_os:
        type: tosca.capabilities.nfv.ext.GuestOs
      image_fle:
        type: tosca.capabilities.nfv.ext.ImageFile

  tosca.nodes.nfv.ext.LocalStorage:
    derived_from: tosca.nodes.Root
    description: Local storage information.
    properties:
      size:
        type: scalar-unit.size
        constraints:
          - greater_or_equal: 1 MB
      disk_type:
        type: string
        required: true
        description: Local disk type,only support one swap disk and one root disk.
        constraints:
          - valid_values: [ root, swap, ephemeral ]
    capabilities:
      local_attachment:
        type: tosca.capabilities.nfv.ext.LocalAttachment

  tosca.nodes.nfv.ext.VDU:
    derived_from: tosca.nodes.nfv.VDU
    requirements:
      - host:
          capability: tosca.capabilities.Container
          node: tosca.nodes.Compute
          relationship: tosca.relationships.HostedOn
          occurrences: [0, 1]
      - guest_os:
          capability: tosca.capabilities.nfv.ext.GuestOs
          node: tosca.nodes.nfv.ext.ImageFile
          relationship: tosca.relationships.DependsOn
      - local_storage:
          capability: tosca.capabilities.nfv.ext.LocalAttachment
          node: tosca.nodes.nfv.ext.LocalStorage
          relationship: tosca.relationships.nfv.ext.LocalAttachesTo
          occurrences: [0, UNBOUNDED]
      - dependency:
          capability: tosca.capabilities.Node
          node: tosca.nodes.nfv.ext.VDU
          relationship: tosca.relationships.DependsOn
          occurrences: [ 0, UNBOUNDED ]

  tosca.nodes.nfv.ext.CP:
    derived_from: tosca.nodes.nfv.CP
    properties:
      sfc_encapsulation:
        type: string
        required: false
        description: The encapsulateion used to carry NSH packages
        constraints:
          - valid_values: [ mac, vxlan-gpe, gre, mpls ]
      direction:
        type: string
        required: false
        constraints:
          - valid_values: [ input, output, bidirectional ]
      interface_name:
        type: string
        required: false
        description: Physical interface name of CP for PNF.
    requirements:
      - link:
          capability: tosca.capabilities.network.Linkable
          relationship: tosca.relationships.network.LinksTo
          occurrences: [ 0, 1 ]
      - binding:
          capability: tosca.capabilities.network.Bindable
          relationship: tosca.relationships.network.BindsTo
          occurrences: [ 0, 1 ]
      - virtualLink:
          capability: tosca.capabilities.nfv.VirtualLinkable
          relationship: tosca.relationships.nfv.VirtualLinksTo
          occurrences: [ 0, 1 ]
      - virtualbinding:
          capability: tosca.capabilities.nfv.VirtualBindable
          relationship: tosca.relationships.nfv.VirtualBindsTo
          occurrences: [ 0, 1 ]
    capabilities:
      forwarder: 
        type: tosca.capabilities.nfv.Forwarder

  tosca.nodes.nfv.ext.VL:
    derived_from: tosca.nodes.nfv.VL
    requirements:
      - virtual_route:
          capability: tosca.capabilities.nfv.ext.VirtualRoutable
          node: tosca.nodes.nfv.ext.Router
          relationship: tosca.relationships.nfv.VirtualLinksTo
          occurrences: [0, 1]

  tosca.nodes.nfv.ext.RouteExternalVL:
    derived_from: tosca.nodes.nfv.ext.VL
    capabilities:
      external_virtual_linkable:
        type: tosca.capabilities.nfv.ext.ExternalVirtualLinkable

  tosca.nodes.nfv.ext.Router:
    derived_from: tosca.nodes.Root
    properties:
      name:
        type: string
        required: true
      enable_snat:
        type: boolean
        required: false
        default: true
    requirements:
      - external_virtual_link:
          capability: tosca.capabilities.nfv.ext.ExternalVirtualLinkable
          node: tosca.nodes.nfv.ext.RouteExternalVL
          relationship: tosca.relationships.nfv.ext.ExternalVirtualLinksTo
          occurrences: [0, 1]
    capabilities:
      virtual_routable:
         type: tosca.capabilities.nfv.ext.VirtualRoutable

  tosca.nodes.nfv.ext.VPNService:
    derived_from: tosca.nodes.Root
    properties:
      name:
        type: string
        required: true
    requirements:
      - virtual_route:
          capability: tosca.capabilities.nfv.ext.VirtualRoutable
          node: tosca.nodes.nfv.ext.Router
          relationship: tosca.relationships.nfv.VirtualLinksTo
      - virtual_link:
          capability: tosca.capabilities.nfv.VirtualLinkable
          node: tosca.nodes.nfv.VL
          relationship: tosca.relationships.nfv.VirtualLinksTo
          occurrences: [0, 1]
    capabilities:
      vpn_service:
         type: tosca.capabilities.nfv.ext.VPNService

  tosca.nodes.nfv.ext.IPSecConnection:
    derived_from: tosca.nodes.Root
    properties:
      name:
        type: string
        required: true
      peer_gateway_address:
        type: string
        required: true
        description: The peer gateway public IPv4 or IPv6 address or FQDN
      peer_router_id:
        type: string
        required: false
        description: >
          The peer router identity for authentication.
          A valid value is an IPv4 address, IPv6 address, e-mail address, key ID, or FQDN.
          Typically, this value matches the peer_address value.
      psk:
        type: string
        required: true
        description: The pre-shared key. A valid value is any string.
      peer_endpoint_type:
        type: string
        required: true
        description: Endpoint group type,the endpoints in a group must be of the same type
        constraints:
          - valid_values: [ subnet, cidr ]
      peer_endpoints:
        type: string
        required: true
        description: >
          endpoint which type must matches the peer_endpoint_type.
          Currently supports only one peer_endpoint.
    requirements:
      - vpn_service:
          capability: tosca.capabilities.nfv.ext.VPNService
          node: tosca.nodes.nfv.ext.VPNService
          relationship: tosca.relationships.HostedOn
      - virtual_link:
          capability: tosca.capabilities.nfv.VirtualLinkable
          node: tosca.nodes.nfv.VL
          relationship: tosca.relationships.nfv.VirtualLinksTo
          occurrences: [0, UNBOUNDED]

  tosca.nodes.nfv.ext.NS:
    derived_from: tosca.nodes.Root
    properties:
      id:
        type: string
        description: ID of this NSD
        required: true
        constraints:
          - min_length: 1
      designer:
        type: string
        description: Designer of this NSD
        required: true
      version:
        type: version
        description: version of this NSD
        required: true
      name:
        type: string
        description: name of this NSD
        required: true
      type:
        type: string
        description: Type of this NSD,include:SSAR,NSAR,GSAR
        required: true
    requirements:
      - virtualLink:
          capability: tosca.capabilities.nfv.VirtualLinkable
          node: tosca.nodes.nfv.VL
          relationship: tosca.relationships.nfv.VirtualLinksTo

  tosca.nodes.nfv.ext.PNF:
    derived_from: tosca.nodes.Root
    properties:
      id:
        type: string
        description: ID of this PNF
        required: true
        constraints:
          - min_length: 1
      vendor:
        type: string
        description: name of the vendor who provide this PNF
        required: true
      version:
        type: version
        description: version of the software for this PNF
        required: true
      pnf_type:
        type: string
        description: type of PNF
        required: false
      request_reclassification:
        type: boolean
        required: false
        default: false
        description: Determines whether VNF can request reclassification by the VNF forwarder
      nsh_aware:
        type: boolean
        required: false
        default: true
        description: Whether this VNF can process NSH headers
    capabilities:
      virtualBinding:
        type: tosca.capabilities.nfv.VirtualBindable

  tosca.nodes.nfv.ext.FP:
    derived_from: tosca.nodes.Root
    properties:
      policy:
        type: tosca.datatypes.nfv.ext.FPPolicy
        required: false
      symmetric:
        type: boolean
        required: false
        description: If the chain is symmetric, SDN Controller will create two service paths, one ingress and another egress.
    requirements:
      - forwarder:
          capability: tosca.capabilities.nfv.Forwarder
          occurrences: [0, UNBOUNDED]
          

capability_types:
  tosca.capabilities.nfv.ext.GuestOs:
    derived_from: tosca.capabilities.Root

  tosca.capabilities.nfv.ext.ImageFile:
    derived_from: tosca.capabilities.Root
    
  tosca.capabilities.nfv.ext.LocalAttachment:
    derived_from: tosca.capabilities.Root

  tosca.capabilities.nfv.ext.VirtualRoutable:
    derived_from: tosca.capabilities.Root

  tosca.capabilities.nfv.ext.ExternalVirtualLinkable:
    derived_from: tosca.capabilities.Root

  tosca.capabilities.nfv.ext.VPNService:
    derived_from: tosca.capabilities.Root

relationship_types:
  tosca.relationships.nfv.ext.LocalAttachesTo:
    derived_from: tosca.relationships.Root
    valid_target_types: [ tosca.capabilities.nfv.ext.LocalAttachment ]
    
  tosca.relationships.nfv.ext.ExternalVirtualLinksTo:
    derived_from: tosca.relationships.DependsOn
    valid_target_types: [ tosca.capabilities.nfv.ext.ExternalVirtualLinkable ]
    properties:
      router_ip_address:
        type: list
        required: false
        description: IP address of the external gateway interface of the router
        entry_schema:
          type: tosca.datatypes.nfv.ext.RouterExternalIP

group_types:
  tosca.groups.nfv.ext.VNFFG:
    derived_from: tosca.groups.nfv.VNFFG
    properties:
      constituent_pnfs:
        type: list
        entry_schema:
          type: string
        required: false
        description: Reference to a list of PNF'ID used in this VNF Forwarding Graph
